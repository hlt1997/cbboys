{"remainingRequest":"D:\\hlt\\shopping\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\hlt\\shopping\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\hlt\\shopping\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\hlt\\shopping\\src\\views\\Details.vue?vue&type=template&id=14d957f8&scoped=true&","dependencies":[{"path":"D:\\hlt\\shopping\\src\\views\\Details.vue","mtime":1603067600948},{"path":"D:\\hlt\\shopping\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\hlt\\shopping\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\hlt\\shopping\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\hlt\\shopping\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}