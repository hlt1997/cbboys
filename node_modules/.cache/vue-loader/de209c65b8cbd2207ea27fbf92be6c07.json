{"remainingRequest":"C:\\Users\\tarena\\Desktop\\shopping\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\tarena\\Desktop\\shopping\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\tarena\\Desktop\\shopping\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\tarena\\Desktop\\shopping\\src\\views\\Details.vue?vue&type=template&id=14d957f8&scoped=true&","dependencies":[{"path":"C:\\Users\\tarena\\Desktop\\shopping\\src\\views\\Details.vue","mtime":1602907262869},{"path":"C:\\Users\\tarena\\Desktop\\shopping\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\tarena\\Desktop\\shopping\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\tarena\\Desktop\\shopping\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\tarena\\Desktop\\shopping\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}